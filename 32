322:初始化很难想到
class Solution:
    def coinChange(self, coins: List[int], amount: int) -> int:
        n = len(coins)
        dp = [[amount+1] * (amount + 1) for _ in range(n + 1)]

        for i in range(n+1):
            dp[i][0] = 0

        for i in range(1, n+1):
            for j in range(1, amount + 1):
                if j >= coins[i-1]:
                    dp[i][j] =  min(dp[i-1][j], dp[i][j-coins[i-1]] + 1)

                else:
                    dp[i][j] = dp[i-1][j]

        if dp[n][amount] >= (amount + 1):
            return -1

    279:
    class Solution:
    def numSquares(self, n: int) -> int:
        squares = [i*i for i in range(1, int(n ** 0.5) + 1)]
        m = len(squares)
        dp = [[(n+1)] * (n+1) for _ in range(m+1)]
        for i in range(m+1):
            dp[i][0] = 0

        for i in range(1, m+1):
            for j in range(1, n+1):
                if j >= squares[i - 1]:
                    dp[i][j] = min(dp[i-1][j], dp[i][j-squares[i-1]] + 1)

                else:
                    dp[i][j] = dp[i-1][j]

        return dp[m][n]创立数组那里不会，然后i-1也忘了
